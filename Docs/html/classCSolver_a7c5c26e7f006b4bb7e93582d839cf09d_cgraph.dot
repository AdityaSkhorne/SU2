digraph "CSolver::InitiateComms"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="CSolver::InitiateComms",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Routine to load a solver quantity into the data structures for MPI point-to-point communication and t..."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="CGeometry::AllocateP2PComms",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCGeometry.html#ab8d78a9f4017431b7542e154f58a7e63",tooltip="Routine to allocate buffers for point-to-point MPI communications. Also called to dynamically realloc..."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="CBaseMPIWrapper::Error",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a04457c47629bda56704e6a8804833eeb",tooltip=" "];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="CBaseMPIWrapper::Abort",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#af7297d861dca86b45cf561b6ab642e8f",tooltip=" "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="CVariable::GetBound_Disp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a7e382eae45700e5c1e8973292c08f128",tooltip="A virtual member. Get the value of the displacement imposed at the boundary."];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="CSolver::GetCommCountAndType",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCSolver.html#a56fdda7e77a14dfc70449ecef91336e7",tooltip="Helper function to define the type and number of variables per point for each communication type."];
  Node6 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="CVariable::GetnAuxVar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a6374f3577665817f4f524f7c2182174a",tooltip="Get the number of auxiliary variables."];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="CConfig::GetTime_Domain",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCConfig.html#a85d2e3cf43b77c63642c40c235b853f3",tooltip="Check if the multizone problem is solved for time domain."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="CVariable::GetLambda",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#af0b6afbd2666eab791d902f50fc3e869",tooltip="Get the value of the spectral radius."];
  Node1 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="CVariable::GetmuT",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#ad35ee29420764dda0bbb574f7a7253e7",tooltip="Get the value of the eddy viscosity."];
  Node1 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="CVariable::GetSensor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#afec545423f883bcd961ac9f1e5d18dd2",tooltip="Get the pressure sensor."];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="CVariable::GetSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a261483e39c23c1de7cb9aea7e917c121",tooltip="Get the solution."];
  Node1 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="CVariable::GetSolution\l_Accel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#aef2fdf091198070a00d12cdb4dea3ff6",tooltip="Get the acceleration (Structural Analysis)."];
  Node1 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="CVariable::GetSolution_Old",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a70a9df6b6cc631f9c3b9a3ef7b3ecfe4",tooltip="Get the old solution of the problem (Runge-Kutta method)"];
  Node1 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="CVariable::GetSolution\l_time_n",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a9162db789c2ca2b71159697cc500fcce",tooltip="Get the solution at time n."];
  Node1 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="CVariable::GetSolution\l_time_n1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a584e438afb716aa0ffce4ccc9b469ef6",tooltip="Get the solution at time n-1."];
  Node1 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CVariable::GetSolution_Vel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#ae403ee21871629716cbabead1c587dac",tooltip="Get the velocity (Structural Analysis)."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="CVariable::GetUndivided\l_Laplacian",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a1dd90f7826e65b6b9fe15becaf82b1af",tooltip="Get the undivided laplacian of the solution."];
  Node1 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="CGeometry::PostP2PRecvs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCGeometry.html#a0951357cde88070db559d6d2511a515d",tooltip="Routine to launch non-blocking recvs only for all point-to-point communication with neighboring parti..."];
  Node19 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="CBaseMPIWrapper::GetComm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a8154391fc3522954802889d81d4ef5da",tooltip=" "];
  Node19 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="CBaseMPIWrapper::Irecv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a672b3e2ba61a86f9a157e7623389c000",tooltip=" "];
  Node1 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="CGeometry::PostP2PSends",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCGeometry.html#a3fd5ef26d01c258616c8bd5f83e345f5",tooltip="Routine to launch a single non-blocking send once the buffer is loaded for a point-to-point commucati..."];
  Node22 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="CBaseMPIWrapper::Isend",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCBaseMPIWrapper.html#a4009cae40f1e050b3635a8d803dbfa3d",tooltip=" "];
  Node1 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="CommHelpers::selectGradient",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceCommHelpers.html#aefdfc34d031234297fad9b2310a922d4",tooltip=" "];
  Node24 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="CVariable::GetAuxVarGradient",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#ad43c887251a67276ddb46b7d2320d224",tooltip="Get the gradient of the auxilary variables."];
  Node24 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="CVariable::GetGradient",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a07d4f954fe5a79e6f85adab3d462d73c",tooltip="Get the gradient of the entire solution."];
  Node24 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="CVariable::GetGradient\l_Primitive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a8b7f4e020a837b1fe639e8d875f964d5",tooltip="A virtual member."];
  Node24 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="CVariable::GetGradient\l_Reconstruction",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a18fee07edc76930704432233b89572bf",tooltip="Get the value of the primitive gradient for MUSCL reconstruction."];
  Node1 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="CommHelpers::selectLimiter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceCommHelpers.html#aae9892d8f4089058f1fe9f51729269dd",tooltip=" "];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="CVariable::GetLimiter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#ab4f777128f4b2375b5203c410fca7fcf",tooltip="Get the slope limiter."];
  Node29 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="CVariable::GetLimiter\l_Primitive",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#aa270f046d6bb56c65899db35c4489fd4",tooltip="Get the primitive variables limiter."];
  Node31 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="CVariable::AssertOverride",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCVariable.html#a57eb0e83f25f08d544f92b75e3f8b617",tooltip=" "];
}
